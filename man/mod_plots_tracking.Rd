% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mod_plots_tracking.R
\name{mod_plots_tracking}
\alias{mod_plots_tracking}
\alias{mod_plots_tracking_ui}
\alias{mod_plots_tracking_server}
\title{mod_plots_tracking_ui and mod_plots_tracking_server}
\usage{
mod_plots_tracking_ui(id)

mod_plots_tracking_server(
  id,
  vizData = reactive({
     NULL
 }),
  resetBtn = reactive({
     FALSE
 })
)
}
\arguments{
\item{id}{shiny id}

\item{vizData}{internal}

\item{resetBtn}{A \code{boolean(1)} which indicates whether to show the 'Reset' button
or not.}

\item{params}{A \code{list} of three items to give instructions to the module
in this it is run in slave mode:
\itemize{
\item type: xxxxx
\item names: xxxxx
\item indices: xxxxx
}}
}
\value{
A \code{list} (same structure as the parameter 'params")
}
\description{
This shiny module provides a tool to select
}
\examples{
library(DaparViz)

options(shiny.fullstacktrace = TRUE)

ui <- fluidPage(
  
  mod_plots_tracking_ui("tracker")
)



server <- function(input, output, session) {
  data(vData_ft)
  obj <- vData_ft[[1]]
  
  indices <- mod_plots_tracking_server("tracker", 
                                       vizData = reactive({obj}))
  
  observe({
    print(indices())
    
  })
}

if (interactive())
  shinyApp(ui, server)
}
\keyword{internal}
