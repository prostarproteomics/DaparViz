% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DaparViz-class.R
\docType{class}
\name{DaparViz-class}
\alias{DaparViz-class}
\alias{DaparViz}
\alias{show,DaparViz-method}
\alias{initialize,DaparViz-method}
\alias{[,DaparViz,ANY,ANY,ANY-method}
\title{DaparViz class}
\usage{
\S4method{show}{DaparViz}(object)

\S4method{initialize}{DaparViz}(
  .Object,
  qdata = data.frame(),
  metacell = data.frame(),
  metadata = data.frame(),
  colID = "",
  proteinID = "",
  conds = "",
  type = "",
  adjMat = data.frame(),
  cc = list()
)

\S4method{[}{DaparViz,ANY,ANY,ANY}(x, i, j = NA, k = NA, l = NA, ..., drop)
}
\arguments{
\item{object}{An instance of the class \code{DaparViz}}

\item{.Object}{xxx}

\item{qdata}{xxx}

\item{metacell}{xxx}

\item{metadata}{xxx}

\item{colID}{xxx}

\item{proteinID}{xxx}

\item{conds}{xxx}

\item{type}{xxx}

\item{adjMat}{xxx}

\item{cc}{xxx}

\item{x}{An instance of class \link{QFeatures}.}

\item{i}{\code{character()}, \code{integer()}, \code{logical()} or \code{GRanges()}
object for subsetting by rows.}

\item{j}{\code{character()}, \code{logical()}, or \code{numeric()} vector for
subsetting by \code{colData} rows.}

\item{k}{\code{character()}, \code{logical()}, or \code{numeric()} vector for
subsetting by assays}

\item{l}{\code{character()}, \code{logical()}, or \code{numeric()} vector for
subsetting by assays}

\item{...}{Additional parameters}

\item{drop}{logical (default \code{TRUE}) whether to drop empty assay
elements in the \code{ExperimentList}.}
}
\value{
See individual method description for the return value.

An instance of class \code{DaparViz}
}
\description{
Conceptually, a \code{DaparViz} object is a standard representation of all
elements from quantitative other structured data used in proteomics, such
as \code{MSnset}, \code{QFeatures}, \code{SummarizedExperiment} or \code{MultAssayExperiment}.
It allows to use it as a generic converter.

\code{DaparViz} objects are not usually created by hand but are created from
the \code{VizList} which is the class accessible by the user.

The recommended way to create \code{DaparViz} objects is the use the
function \code{convert2viz()} of the class \code{VizList}
}
\section{Slots}{

\describe{
\item{\code{qdata}}{A matrix containing the quantitative data}

\item{\code{metacell}}{A matrix of xxx}

\item{\code{metadata}}{A matrix of xxxx}

\item{\code{colID}}{The name of the colum which contains the ids of each row.}

\item{\code{proteinID}}{The name of the column in the metadata which represent the
(unique) id of the protein}

\item{\code{conds}}{A vector of the names of the condition of each sample
of the dataset}

\item{\code{type}}{The type of entity in the dataset (peptide, protein, ...)}

\item{\code{adjMat}}{xxx}

\item{\code{cc}}{A list of xxx}
}}

\examples{
## ------------------------
## An empty DaparViz object
## ------------------------

DaparViz()

## -----------------------------------
## Creating a DaparViz object manually
## -----------------------------------

}
\seealso{
The \code{DaparViz()} constructor and the \code{convert2Viz()}
function. The \emph{DaparViz} vignette provides an extended example.
}
\author{
Samuel Wieczorek
}
