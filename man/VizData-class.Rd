% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/VizData_Class.R
\docType{class}
\name{VizData-class}
\alias{VizData-class}
\alias{VizData}
\alias{show,VizData-method}
\alias{initialize,VizData-method}
\title{VizData class}
\usage{
\S4method{show}{VizData}(object)

\S4method{initialize}{VizData}(
  .Object,
  qdata,
  metacell,
  metadata,
  colID,
  proteinID,
  conds,
  type,
  adjMat,
  cc
)
}
\arguments{
\item{object}{An instance of the class \code{VizData}}

\item{.Object}{xxx}

\item{qdata}{xxx}

\item{metacell}{xxx}

\item{metadata}{xxx}

\item{colID}{xxx}

\item{proteinID}{xxx}

\item{conds}{xxx}

\item{type}{xxx}

\item{adjMat}{xxx}

\item{cc}{xxx}
}
\description{
Conceptually, a \code{VizData} object is a standard representation of all
elements from quantitative other structured data used in proteomics, such
as \code{MSnset} or \code{QFeatures}. It allows to use it as a generic converter.

\code{VizData} objects are not usually created by hand but are created from the \code{VizList}
which is the class accessible by the user.

The recommended way to create \code{VizData} objects is the use the
\code{xxxx()} function of the class \code{VizList}

xxx

xxx
}
\section{Slots}{

\describe{
\item{\code{qdata}}{xxx}

\item{\code{metacell}}{xxx}

\item{\code{metadata}}{xxx}

\item{\code{colID}}{xxx}

\item{\code{proteinID}}{xxx}

\item{\code{conds}}{xxx}

\item{\code{type}}{xxx}

\item{\code{adjMat}}{xxx}

\item{\code{cc}}{xxx}
}}

\examples{
library(DaparViz)
library(Matrix)

# Convert a QFeatures object to an instance of VizList class
data(ft1)
vData_ft1 <- convert2viz(ft1)
vData_ft1

# Convert a list of MSnSet objects to an instance of VizList class
data(ms1)
data(ms2)
ll.tmp <- setNames(c(ms1, ms2), nm = c('ms1', 'ms2'))

convert2viz(ll.tmp)


# Convert a list of lists of specific items to an instance of VizList class

data(ms1)
msnset <- ms1
X <- PSMatch::makeAdjacencyMatrix(MSnbase::fData(msnset)[, msnset@experimentData@other$proteinId])
rownames(X) <- rownames(MSnbase::fData(msnset))
connectedComp <- PSMatch::ConnectedComponents(X)

ll.ms1 <- list(
  qdata = MSnbase::exprs(msnset),
  metacell = MSnbase::fData(msnset)[ , msnset@experimentData@other$names_metacell],
  mdata = MSnbase::fData(msnset),
  colID = msnset@experimentData@other$keyId,
  conds = MSnbase::pData(msnset)[, 'Condition'],
  type = msnset@experimentData@other$typeOfData,
  adjMat = as.matrix(X),
  cc = as.list(connectedComp@adjMatrices)
  )

data(ms2)
msnset <- ms2
ll.ms2 <- list(
   qdata = MSnbase::exprs(msnset),
  metacell = MSnbase::fData(msnset)[ , msnset@experimentData@other$names_metacell],
  mdata = MSnbase::fData(msnset),
  colID = msnset@experimentData@other$keyId,
  conds = MSnbase::pData(msnset)[, 'Condition'],
  type = msnset@experimentData@other$typeOfData
)


ll.tmp <- list(ms1 = ll.ms1,
               ms2 = ll.ms2)

convert2viz(ll.tmp)
}
