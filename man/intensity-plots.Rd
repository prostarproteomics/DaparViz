% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mod_ds_intensity.R, R/plot_boxplot.R,
%   R/plot_violin.R
\name{intensity-plots}
\alias{intensity-plots}
\alias{mod_ds_intensity_ui}
\alias{mod_ds_intensity_server}
\alias{boxPlot}
\alias{violinPlot}
\title{Displays a correlation matrix of the quantitative data of a
numeric matrix.}
\usage{
mod_ds_intensity_ui(id)

mod_ds_intensity_server(
  id,
  DaparViz,
  track.indices = reactive({
     NULL
 })
)

boxPlot(data, conds, subset = NULL, pal.name = NULL)

violinPlot(data, conds, subset = NULL, pal.name)
}
\arguments{
\item{id}{A \code{character(1)} which is the id of the shiny module.}

\item{DaparViz}{A instance of the class \code{DaparViz}}

\item{track.indices}{xxx}

\item{data}{An instance of the class \code{matrix}}

\item{conds}{A \code{character()} of the name of conditions
(one condition per sample). The number of conditions must be equal to
the number of samples (number of columns) of the parameter 'data'.}

\item{subset}{A vector of index indicating rows to highlight}

\item{pal.name}{A \code{character(1)} which is the name of the palette from the
package \link{RColorBrewer} from which the colors are taken. Default value
is 'Set1'.}
}
\value{
NA

A boxplot

A violinplot
}
\description{
xxxx
}
\examples{
library(DaparViz)

ui <- fluidPage(
  tagList(
    mod_plots_tracking_ui('tracker'),
    mod_ds_intensity_ui("iplot")
  )
)

server <- function(input, output, session) {
  data(vData_ft)
  obj <- vData_ft[[1]]
  indices <- mod_plots_tracking_server("tracker", 
                                       vizData = reactive({obj}))
  
  mod_ds_intensity_server("iplot",
                          vizData = reactive({obj}),
                          track.indices = reactive({indices()})
                          )
    }

if (interactive())
  shinyApp(ui = ui, server = server)
library(DaparViz)

ui <- fluidPage(
  tagList(
    mod_plots_tracking_ui('tracker'),
    mod_ds_intensity_ui("iplot")
  )
)

server <- function(input, output, session) {
  data(vData_ft)
  obj <- vData_ft[[1]]
  indices <- mod_plots_tracking_server("tracker", 
                                       vizData = reactive({obj}))
  
  mod_ds_intensity_server("iplot",
                          vizData = reactive({obj}),
                          track.indices = reactive({indices()})
                          )
    }

if (interactive())
  shinyApp(ui = ui, server = server)
library(DaparViz)

ui <- fluidPage(
  tagList(
    mod_plots_tracking_ui('tracker'),
    mod_ds_intensity_ui("iplot")
  )
)

server <- function(input, output, session) {
  data(vData_ft)
  obj <- vData_ft[[1]]
  indices <- mod_plots_tracking_server("tracker", 
                                       vizData = reactive({obj}))
  
  mod_ds_intensity_server("iplot",
                          vizData = reactive({obj}),
                          track.indices = reactive({indices()})
                          )
    }

if (interactive())
  shinyApp(ui = ui, server = server)
}
\author{
Samuel Wieczorek, Anais Courtier, Enora Fremy
}
