% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plots_mv_for_impute.R
\name{imputation}
\alias{imputation}
\alias{mvPlot.2}
\alias{mvImage}
\title{Distribution of Observed values with respect to intensity values}
\usage{
mvPlot.2(qData, conds, title = NULL, pal.name)

mvImage(object, conds)
}
\arguments{
\item{qData}{An instance of a \code{matrix} containing numeric vales.}

\item{conds}{A \code{character()} of the name of conditions (one condition per sample).}

\item{title}{The title of the plot}

\item{pal.name}{A \code{character(1)} which is the name of the palette (from
the package \link{RColorBrewer} to use.}

\item{object}{An instance of a class \code{SummarizedExperiment}.}
}
\value{
A plot
}
\description{
This method shows density plots which represents the repartition of
Partial Observed Values for each replicate in the dataset.
The colors correspond to the different conditions (Condition in colData of
the object of class \link{QFeatures}).
The x-axis represent the mean of intensity for one condition and one
entity in the dataset (i. e. a protein)
whereas the y-axis count the number of observed values for this entity
and the considered condition.
}
\section{xxx}{


xxxx
}

\section{missing value image}{

Plots a heatmap of the quantitative data. Each column represent one of
the conditions in the object of class \code{MSnSet} and
the color is proportional to the mean of intensity for each line of
the dataset.
The lines have been sorted in order to visualize easily the different
number of missing values. A white square is plotted for missing values.
}

\examples{

library(QFeatures)
data(ft)
qData <- assay(ft,1)
conds <- design(ft)$Condition

#-----------------------------
# xxx
#-----------------------------

mvPlot.2(qData, conds)

mvPlot.2(Exp1_R25_pept, 2, title="POV distribution", palette=pal)

#-----------------------------
# xxx
#-----------------------------

data(ft_na)
mvImage(ft_na[[1]], conds)

#-----------------------------
# xxx
#-----------------------------

if(interactive()){
 library(QFeatures)
 library(shiny)
 library(DaparToolshed)
 data(ft_na)
 conds <- design(ft_na)$Condition
 
  
 ui <- mod_imputation_plot_ui('plot')

 server <- function(input, output, session) {
  mod_imputation_plot_server('plot',
                          obj = reactive({ft_na[[1]]}),
                          conds = reactive({conds}),
                          pal.name = reactive({'Dark2'})
                         )
  }
 
 shinyApp(ui=ui, server=server)
}
}
\author{
Samuel Wieczorek, Enora Fremy
}
