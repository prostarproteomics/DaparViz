% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adjacencyMatrixInfos.R
\name{GraphPepProt_hc}
\alias{GraphPepProt_hc}
\title{Function to create a histogram that shows the repartition of
peptides w.r.t. the proteins}
\usage{
GraphPepProt_hc(X, type = "all")
}
\arguments{
\item{X}{An adjacency matrix.}

\item{type}{A string which is the type of matrix (used to build the plot title). Default value is 'all'.}
}
\value{
A histogram
}
\description{
#' This function computes few values about the adjacency matrix such as the number of proteins that are only defined by
#' specific peptides, shared peptides or a mixture of two.
#'
#' @title Computes the number of proteins that are only defined by
#' specific peptides, shared peptides or a mixture of two.
#'
#' @param X The adjacency matrix with both specific and shared peptides.
#'
#' @return A list of values:
#' * nbPeptides: the number of peptides in the matrix,
#' nbSpecificPeptides: the number of specific peptides in the matrix,
#' nbSharedPeptides: the number of shared peptides in the matrix,
#' nbProt: the number of proteins in the matrix,
#' protOnlyUniquePep: the list of proteins only defined by specific peptides,
#' protOnlySharedPep: the list of proteins only defined by shared peptides,
#' protMixPep: the list of proteins defined by both shared and specific peptides.
#'
#' @author Samuel Wieczorek
#'
#' @examples
#' Exp1_R25_pept <- readRDS(system.file("data", 'Exp1_R25_pept.rda', package="DaparToolshedData"))
#' obj <- Exp1_R25_pept\link{seq_len(1000),}
#' obj <- addListAdjacencyMatrices(obj, 2)
#' X <- GetAdjMat(obj[\link{2}])$all
#' matAdjStats(X)
#'
#' @export
#'
matAdjStats <- function(X){
if (is.null(X)){
warning('The adjacency matrix is NULL.')
return(NULL)
}

ind.shared.Pep <- which(rowSums(as.matrix(X))>1)
ind.unique.Pep <- which(rowSums(as.matrix(X))==1)

M.shared.Pep <- X\link{ind.shared.Pep,}
M.shared.Pep <- M.shared.Pep\link{,-which(colSums(as.matrix(M.shared.Pep))==0)}

M.unique.Pep <- X\link{ind.unique.Pep,}
M.unique.Pep <- M.unique.Pep\link{,-which(colSums(as.matrix(M.unique.Pep))==0)}

pep.names.shared <- colnames(M.shared.Pep)
pep.names.unique <- colnames(M.unique.Pep)
protOnlyShared <- setdiff(pep.names.shared, intersect(pep.names.shared, pep.names.unique))
protOnlyUnique <- setdiff(pep.names.unique, intersect(pep.names.shared, pep.names.unique))
protMix <- intersect(pep.names.shared, pep.names.unique)

return (list(nbPeptides = nrow(M.unique.Pep)+nrow(M.shared.Pep),
nbSpecificPeptides = nrow(M.unique.Pep),
nbSharedPeptides = nrow(M.shared.Pep),
nbProt = length(protOnlyShared)+length(protOnlyUnique)+length(protMix),
protOnlyUniquePep =protOnlyUnique,
protOnlySharedPep =protOnlyShared,
protMixPep = protMix))
}
Method to plot the disrtibution (histogram) of peptides w.r.t the proteins with proteins and peptides
in an adjacency matrix
}
\examples{
data(ft)
X <- adjacencyMatrix(ft[[1]])
GraphPepProt_hc(X)

}
\author{
Alexia Dorffer, Samuel Wieczorek
}
